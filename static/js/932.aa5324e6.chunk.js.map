{"version":3,"file":"static/js/932.aa5324e6.chunk.js","mappings":"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","sources":["webpack://dashboard/./src/components/SignUp/SignUp.module.scss?7ad6","components/SignUp/SignUp.js","pages/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SignUp\":\"SignUp_SignUp__XE8TP\",\"SignUp__container\":\"SignUp_SignUp__container__MhOjv\",\"SignUp__link\":\"SignUp_SignUp__link__kSYFj\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport operations from \"../../redux/auth/auth-operations\";\r\nimport styles from \"./SignUp.module.scss\";\r\n\r\nconst theme = createTheme();\r\n\r\nfunction SignUp() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"Evano\");\r\n  const [email, setEmail] = useState(\"evano1@ukr.net\");\r\n  const [password, setPassword] = useState(\"1234567890\");\r\n  const [isRegister] = useState(true);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(operations.register({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={styles.SignUp}>\r\n        <CssBaseline />\r\n        <Box\r\n          className={styles.SignUp__container}\r\n          sx={{\r\n            marginTop: 2,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"#5932ea\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              {isRegister && (\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Name and last name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={email}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  value={password}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                  }\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 2, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <NavLink to={\"/login\"} className={styles.SignUp__link}>\r\n                  Already have an account? Sign in\r\n                </NavLink>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import { useSelector } from 'react-redux';\r\nimport SignUp from '../components/SignUp';\r\nimport Loader from '../components/Loader';\r\nimport { getSelectorLoading } from '../redux/auth/auth-selectors';\r\n\r\nconst RegisterPage = () => {\r\n  const isLoading = useSelector(getSelectorLoading);\r\n\r\n  return (\r\n    <>\r\n      <SignUp />\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["theme","createTheme","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isRegister","handleChange","target","value","ThemeProvider","className","styles","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","component","variant","noValidate","onSubmit","e","preventDefault","operations","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","autoComplete","onChange","type","FormControlLabel","control","Checkbox","color","Button","mb","justifyContent","to","isLoading","useSelector","getSelectorLoading","Loader"],"sourceRoot":""}